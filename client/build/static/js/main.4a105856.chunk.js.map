{"version":3,"sources":["Components/PlantList/PlantList.js","Common/Hooks/useLatestSensorData.js","Api/Backend.js","Context/PlantsContext.js","Screens/AddPlantModal.js","Screens/HomeScreen.js","Components/Graph/Graph.js","Components/TemperatureThreshold/TemperatureThreshold.js","Components/MoistureThreshold/MoistureThreshold.js","Components/LightThreshold/LightThreshold.js","Screens/PlantDetails.js","App.js","reportWebVitals.js","index.js"],"names":["PlantList","data","onPlantPressed","List","map","item","_id","Box","onClick","plant","PlantCard","props","latestSensorData","useState","currentTemperature","setCurrentTemperature","currentHumidity","setCurrentHumidity","currentSoilMoisture","setCurrentSoilMoisture","currentLight","setCurrentLight","useEffect","temperature","humidity","soil","light","length","latestTemperature","latestHumidity","latestSoilMoisture","latestLight","soilMoisture","useLatestSensorData","name","value","display","flexDirection","borderRadius","margin","style","backgroundColor","padding","Typography","fontSize","axios","require","_get","uri","a","get","timeout","response","status","Error","error","_post","body","post","message","api","getPlants","getPlant","id","getSensorData","plantId","createPlantSettings","usePlants","useContext","plantsContext","createContext","ProvidePlants","children","plants","setPlants","fetchPlantData","_plants","Promise","all","plantSettings","sensorData","temperatureData","date","humidityData","soilData","moisture","lightData","lightOn","plantsWithData","find","useProvidePlants","Provider","AddPlantModal","open","handleClose","setName","i2cAddr","setI2cAddr","Modal","onClose","height","justifyContent","alignItems","width","label","onChange","Button","Row","color","TextField","marginLeft","e","target","variant","useStyles","makeStyles","theme","root","overflowX","minHeight","HomeScreen","classes","history","useHistory","addPlantModalOpen","setAddPlantModalOpen","className","Container","paddingTop","replace","Fab","position","bottom","right","Graph","title","yTickFormatter","type","ResponsiveContainer","LineChart","top","left","CartesianGrid","strokeDasharray","XAxis","dataKey","tickFormatter","Date","getTime","YAxis","Line","stroke","activeDot","r","TemperatureThreshold","temperatureThreshold","setTemperatureThreshold","Slider","valueLabelDisplay","min","max","defaultValue","event","newValue","MoistureThreshold","moistureThreshold","setMoistureThreshold","LightThreshold","lightThreshold","setLightThreshold","RangeSlider","handleChange","sx","getAriaLabel","PlantSettings","handleSavePress","PlantDetails","setPlant","useParams","setTemperatureData","setHumidityData","setSoilData","setLightData","_plant","console","log","lightStart","lightEnd","muiTheme","createMuiTheme","App","ThemeProvider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4a105856.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { List, Box, Typography } from \"@material-ui/core\";\nimport useLatestSensorData from \"../../Common/Hooks/useLatestSensorData\";\n\nexport default function PlantList({ data, onPlantPressed }) {\n  return (\n    <List>\n      {data.map((item) => {\n        var { _id } = item;\n        return (\n          <Box onClick={() => onPlantPressed(_id)}>\n            <PlantCard plant={item} />\n          </Box>\n        );\n      })}\n    </List>\n  );\n}\n\nexport const PlantCard = (props) => {\n  var { plant } = props;\n  const latestSensorData = useLatestSensorData(plant);\n\n  if (plant) {\n    var { name } = plant;\n    var temperature = latestSensorData.temperature.value ? `${latestSensorData.temperature.value} C` : \"None\";\n    var humidity = latestSensorData.humidity.value ? `${latestSensorData.humidity.value} %` : \"None\";\n    var soilMoisture = latestSensorData.soilMoisture.value ? `${latestSensorData.soilMoisture.value} %` : \"None\";\n    var light = latestSensorData.light.value ? latestSensorData.light.value : \"None\";\n\n    return (\n      <Box display={\"flex\"} flexDirection={\"row\"} borderRadius={10} margin={3} style={{ backgroundColor: \"#D3D3D3\" }}>\n        <Box padding={1}>\n          <Typography style={{ fontSize: 22 }}>{name}</Typography>\n        </Box>\n        <Box padding={1}>\n          <Typography>Temperature</Typography>\n          <Typography>{temperature}</Typography>\n        </Box>\n        <Box padding={1}>\n          <Typography>Humidity</Typography>\n          <Typography>{humidity}</Typography>\n        </Box>\n        <Box padding={1}>\n          <Typography>Soil Moisture</Typography>\n          <Typography>{soilMoisture}</Typography>\n        </Box>\n        <Box padding={1}>\n          <Typography>Light</Typography>\n          <Typography>{latestSensorData.light.value ? \"ON\" : \"OFF\"}</Typography>\n        </Box>\n      </Box>\n    );\n  } else {\n    return (\n      <Box display={\"flex\"} flexDirection={\"row\"} borderRadius={10} margin={3} style={{ backgroundColor: \"#D3D3D3\" }}>\n        <Box padding={1}>\n          <Typography style={{ fontSize: 22 }}>{\"No data available\"}</Typography>\n        </Box>\n      </Box>\n    );\n  }\n};\n","import React, { useState, useEffect } from \"react\";\n\nexport default function useLatestSensorData(plant) {\n  const [currentTemperature, setCurrentTemperature] = useState(0);\n  const [currentHumidity, setCurrentHumidity] = useState(0);\n  const [currentSoilMoisture, setCurrentSoilMoisture] = useState(0);\n  const [currentLight, setCurrentLight] = useState(0);\n\n  useEffect(() => {\n    if (plant) {\n      var { temperature, humidity, soil, light } = plant;\n      if (temperature.length > 0) {\n        var latestTemperature = temperature[0];\n        setCurrentTemperature(latestTemperature);\n      }\n      if (humidity.length > 0) {\n        var latestHumidity = temperature[0];\n        setCurrentHumidity(latestHumidity);\n      }\n      if (soil.length > 0) {\n        var latestSoilMoisture = soil[0];\n        setCurrentSoilMoisture(latestSoilMoisture);\n      }\n      if (light.length > 0) {\n        var latestLight = light[0];\n        setCurrentLight(latestLight);\n      }\n    }\n  }, [plant]);\n\n  return {\n    temperature: currentTemperature,\n    humidity: currentHumidity,\n    soilMoisture: currentSoilMoisture,\n    light: currentLight,\n  };\n}\n","const axios = require(\"axios\");\n\nconst _get = async (uri) => {\n  const response = await axios.get(uri, { timeout: 10000 });\n  if (response.status === 200) {\n    return response.data;\n  } else throw new Error(response.data.error);\n};\nconst _post = async (uri, body) => {\n  try {\n    const response = await axios.post(uri, body, { timeout: 10000 });\n    if (response.status === 200) {\n      return response.data;\n    }\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\nconst _put = async (uri, body) => {\n  try {\n    const response = await axios.put(uri, body, { timeout: 10000 });\n    if (response.status === 200) {\n      return response.data.data;\n    }\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\nconst _delete = async (uri) => {\n  try {\n    const response = await axios.delete(uri, { timeout: 10000 });\n    if (response.status === 200) {\n      return response.data.data;\n    }\n  } catch (error) {\n    throw new Error(error.response.data.message);\n  }\n};\n\nconst api = {\n  getPlants: async () => _get(`/api/plants/`),\n  getPlant: async (id) => _get(`/api/plant/${id}`),\n  getSensorData: async (plantId) => _get(`/api/sensor_data/${plantId}`),\n  createPlantSettings: async (plantId, body) => _post(`/api/plant_settings/${plantId}`, body),\n};\nexport default api;\n","import React, { useContext, useState, createContext, useEffect } from \"react\";\nimport api from \"../Api/Backend\";\n\nexport function useProvidePlants() {\n  const [plants, setPlants] = useState([]);\n\n  const fetchPlantData = async () => {\n    var _plants = await api.getPlants();\n\n    var plantsWithData = await Promise.all(\n      _plants.map(async (plant) => {\n        var { _id } = plant;\n        var plantSettings = await api.getPlant(_id);\n        var sensorData = await api.getSensorData(_id);\n        var temperatureData = sensorData.map((item) => {\n          return { date: item.date, value: item.temperature };\n        });\n        var humidityData = sensorData.map((item) => {\n          return { date: item.date, value: item.humidity };\n        });\n        var soilData = sensorData.map((item) => {\n          return { date: item.date, value: item.moisture };\n        });\n        var lightData = sensorData.map((item) => {\n          return { date: item.date, value: item.lightOn };\n        });\n        return {\n          ...plant,\n          ...plantSettings,\n          temperature: temperatureData,\n          humidity: humidityData,\n          soil: soilData,\n          light: lightData,\n        };\n      })\n    );\n    setPlants(plantsWithData);\n  };\n\n  useEffect(() => {\n    fetchPlantData();\n  }, []);\n\n  const getPlant = (id) => {\n    var plant = plants.find((item) => item._id === id);\n    return plant;\n  };\n\n  return {\n    plants,\n    setPlants,\n    getPlant,\n  };\n}\nexport function usePlants() {\n  return useContext(plantsContext);\n}\nconst plantsContext = createContext();\n\nexport function ProvidePlants({ children }) {\n  const plants = useProvidePlants();\n  return <plantsContext.Provider value={plants}>{children}</plantsContext.Provider>;\n}\n","import { Modal, Box, Typography, TextField, Button } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\n\nexport default function AddPlantModal({ open, handleClose }) {\n  const [name, setName] = useState(\"\");\n  const [i2cAddr, setI2cAddr] = useState(\"\");\n  return (\n    <Modal open={open} onClose={handleClose}>\n      <Box\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100%\",\n          justifyContent: \"center\",\n          alignItems: \"center\",\n        }}\n      >\n        <Box\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"space-between\",\n            height: 300,\n            width: 400,\n            backgroundColor: \"white\",\n            padding: 10,\n          }}\n        >\n          <Box>\n            <Typography style={{ fontSize: 22 }}>Add Plant</Typography>\n            <Row label={\"Name\"} value={name} onChange={setName} />\n            <Row label={\"I2C address\"} value={i2cAddr} onChange={setI2cAddr} />\n          </Box>\n          <Button>Submit</Button>\n        </Box>\n      </Box>\n    </Modal>\n  );\n}\n\nconst Row = ({ label, value, onChange }) => {\n  const handleTextChange = (e) => {\n    onChange(e.target.value);\n  };\n  return (\n    <Box style={{ display: \"flex\", flexDirection: \"row\", alignItems: \"center\", padding: 5 }}>\n      <Typography style={{ color: \"black\" }}>{label}</Typography>\n      <TextField\n        value={value}\n        style={{ marginLeft: 5 }}\n        onChange={handleTextChange}\n        id=\"standard-basic\"\n        variant=\"standard\"\n      />\n    </Box>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Typography, Fab } from \"@material-ui/core\";\nimport { Download } from \"@mui/icons-material\";\nimport PlantList from \"../Components/PlantList/PlantList\";\nimport { usePlants } from \"../Context/PlantsContext\";\nimport AddPlantModal from \"./AddPlantModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    overflowX: \"auto\",\n    display: \"flex\",\n    alignItems: \"stretch\",\n    width: \"100%\",\n    minHeight: \"100vh\",\n  },\n}));\n\nexport const HomeScreen = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const [addPlantModalOpen, setAddPlantModalOpen] = useState(false);\n  const { plants } = usePlants();\n\n  const onPlantPressed = (plantId) => {\n    history.replace(`plant/${plantId}`);\n  };\n\n  const handleAddPlantPress = () => {\n    setAddPlantModalOpen(true);\n  };\n\n  const handleModalClose = () => {\n    setAddPlantModalOpen(false);\n  };\n\n  return (\n    <div className={classes.root}>\n      <Container style={{ paddingTop: 20 }}>\n        <Typography style={{ fontSize: 26 }}>Plants</Typography>\n        <PlantList data={plants} onPlantPressed={onPlantPressed} />\n      </Container>\n      <Fab color=\"primary\" onClick={handleAddPlantPress} style={{ position: \"fixed\", bottom: 50, right: 50 }}>\n        {/* <Download /> */}\n      </Fab>\n      <AddPlantModal open={addPlantModalOpen} handleClose={handleModalClose} />\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","import { Box, Typography } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { ResponsiveContainer, LineChart, CartesianGrid, XAxis, YAxis, Legend, Line } from \"recharts\";\n\nconst data = [\n  {\n    name: \"Page A\",\n    uv: 4000,\n    pv: 2400,\n    amt: 2400,\n  },\n  {\n    name: \"Page B\",\n    uv: 3000,\n    pv: 1398,\n    amt: 2210,\n  },\n  {\n    name: \"Page C\",\n    uv: 2000,\n    pv: 9800,\n    amt: 2290,\n  },\n  {\n    name: \"Page D\",\n    uv: 2780,\n    pv: 3908,\n    amt: 2000,\n  },\n  {\n    name: \"Page E\",\n    uv: 1890,\n    pv: 4800,\n    amt: 2181,\n  },\n  {\n    name: \"Page F\",\n    uv: 2390,\n    pv: 3800,\n    amt: 2500,\n  },\n  {\n    name: \"Page G\",\n    uv: 3490,\n    pv: 4300,\n    amt: 2100,\n  },\n];\n\nexport default function Graph({ title, data, yTickFormatter, type }) {\n  useEffect(() => {}, [data]);\n  return (\n    <Box display={\"flex\"} flexDirection={\"column\"} width={\"100%\"} height={400} margin={3} alignItems={\"center\"}>\n      <Typography>{title}</Typography>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" tickFormatter={(item) => new Date(item).getTime()} />\n          <YAxis tickFormatter={yTickFormatter} />\n          {/* <Legend /> */}\n          <Line type={type || \"monotone\"} dataKey={\"value\"} stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n        </LineChart>\n      </ResponsiveContainer>\n    </Box>\n  );\n}\n","import { Box, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Slider } from \"@material-ui/core\";\n\nexport default function TemperatureThreshold({ temperatureThreshold, setTemperatureThreshold }) {\n  const handleChange = (event, newValue) => {\n    setTemperatureThreshold(newValue);\n  };\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Typography>TemperatureThreshold</Typography>\n      <Slider\n        valueLabelDisplay=\"auto\"\n        value={temperatureThreshold}\n        min={0}\n        max={50}\n        defaultValue={20}\n        onChange={handleChange}\n      />\n    </Box>\n  );\n}\n","import { Box, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { Slider } from \"@material-ui/core\";\n\nexport default function MoistureThreshold({ moistureThreshold, setMoistureThreshold }) {\n  const handleChange = (event, newValue) => {\n    setMoistureThreshold(newValue);\n  };\n  return (\n    <Box display=\"flex\" flexDirection=\"column\">\n      <Typography>MoistureThreshold</Typography>\n      <Slider valueLabelDisplay=\"auto\" defaultValue={30} value={moistureThreshold} onChange={handleChange} />\n    </Box>\n  );\n}\n","import { Box, Typography, Slider } from \"@material-ui/core\";\nimport React from \"react\";\n\nexport default function LightThreshold({ lightThreshold, setLightThreshold }) {\n  const handleChange = (event, newValue) => {\n    setLightThreshold(newValue);\n  };\n  return (\n    <Box>\n      <Typography>Light Threshold</Typography>\n      <RangeSlider handleChange={handleChange} lightThreshold={lightThreshold} />\n    </Box>\n  );\n}\n\nfunction RangeSlider({ handleChange, lightThreshold }) {\n  return (\n    <Box sx={{ width: 300 }}>\n      <Slider\n        getAriaLabel={() => \"Temperature range\"}\n        value={lightThreshold}\n        onChange={handleChange}\n        valueLabelDisplay=\"auto\"\n        min={1}\n        max={24}\n        // getAriaValueText={valuetext}\n      />\n    </Box>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport { Button, Typography, Box } from \"@material-ui/core\";\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Graph from \"../Components/Graph/Graph\";\nimport TemperatureThreshold from \"../Components/TemperatureThreshold/TemperatureThreshold\";\nimport MoistureThreshold from \"../Components/MoistureThreshold/MoistureThreshold\";\nimport LightThreshold from \"../Components/LightThreshold/LightThreshold\";\nimport { usePlants } from \"../Context/PlantsContext\";\nimport useLatestSensorData from \"../Common/Hooks/useLatestSensorData\";\nimport { PlantCard } from \"../Components/PlantList/PlantList\";\nimport api from \"../Api/Backend\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    overflowX: \"auto\",\n    display: \"flex\",\n    alignItems: \"stretch\",\n    width: \"100%\",\n    minHeight: \"100vh\",\n  },\n}));\n\nexport const PlantDetails = (props) => {\n  const classes = useStyles();\n  const history = useHistory();\n  const { getPlant } = usePlants();\n  const [plant, setPlant] = useState(null);\n  let { id } = useParams();\n  const [temperatureThreshold, setTemperatureThreshold] = useState(0);\n  const [moistureThreshold, setMoistureThreshold] = useState(0);\n  const [lightThreshold, setLightThreshold] = useState([1, 24]);\n  const [temperatureData, setTemperatureData] = useState([]);\n  const [humidityData, setHumidityData] = useState([]);\n  const [soilData, setSoilData] = useState([]);\n  const [lightData, setLightData] = useState([]);\n\n  useEffect(() => {\n    var _plant = getPlant(id);\n    setPlant(_plant);\n  }, [id]);\n\n  useEffect(() => {\n    if (plant) {\n      console.log(plant);\n      var { temperature, humidity, light, soil, plantSettings } = plant;\n      var { moistureThreshold, temperatureThreshold, lightStart, lightEnd } = plantSettings;\n      setMoistureThreshold(moistureThreshold);\n      setTemperatureThreshold(temperatureThreshold);\n      setLightThreshold([lightStart, lightEnd]);\n      setSoilData(soil);\n      setTemperatureData(temperature);\n      setHumidityData(humidity);\n      setLightData(light);\n    }\n  }, [plant]);\n\n  const onBackPressed = () => {\n    history.replace(`/`);\n  };\n\n  const handleSavePress = async () => {\n    var plantSettings = await api.createPlantSettings(id, {\n      plantId: id,\n      moistureThreshold: moistureThreshold,\n      temperatureThreshold: temperatureThreshold,\n      lightStart: lightThreshold[0],\n      lightEnd: lightThreshold[1],\n    });\n  };\n\n  return (\n    <div className={classes.root}>\n      <Container style={{ paddingTop: 20 }}>\n        <Button onClick={onBackPressed}>Back</Button>\n        <PlantCard plant={plant} />\n        <PlantSettings\n          temperatureThreshold={temperatureThreshold}\n          setTemperatureThreshold={setTemperatureThreshold}\n          moistureThreshold={moistureThreshold}\n          setMoistureThreshold={setMoistureThreshold}\n          lightThreshold={lightThreshold}\n          setLightThreshold={setLightThreshold}\n          handleSavePress={handleSavePress}\n        />\n        <Graph title={\"Temperature\"} data={temperatureData} />\n        <Graph title={\"Humidity\"} data={humidityData} />\n        <Graph title={\"Soil\"} data={soilData} />\n        <Graph title={\"Light\"} data={lightData} type={\"step\"} yTickFormatter={(item) => (item ? 1 : 0)} />\n      </Container>\n    </div>\n  );\n};\n\nconst PlantSettings = ({\n  temperatureThreshold,\n  setTemperatureThreshold,\n  moistureThreshold,\n  setMoistureThreshold,\n  lightThreshold,\n  setLightThreshold,\n  handleSavePress,\n}) => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDirection={\"column\"}\n      alignItems={\"flex-start\"}\n      padding={1}\n      style={{ backgroundColor: \"#D3D3D3\", borderRadius: 20 }}\n    >\n      <Typography>Plant Settings</Typography>\n      <Box display=\"flex\" width={\"100%\"}>\n        <Box display=\"flex\" flexDirection={\"column\"} width={\"50%\"} margin={2}>\n          <TemperatureThreshold\n            temperatureThreshold={temperatureThreshold}\n            setTemperatureThreshold={setTemperatureThreshold}\n          />\n          <MoistureThreshold moistureThreshold={moistureThreshold} setMoistureThreshold={setMoistureThreshold} />\n        </Box>\n        <Box display=\"flex\" flexDirection={\"column\"} width={\"50%\"} margin={2}>\n          <LightThreshold lightThreshold={lightThreshold} setLightThreshold={setLightThreshold} />\n        </Box>\n      </Box>\n      <Button onClick={handleSavePress}>Save</Button>\n    </Box>\n  );\n};\n\nexport default PlantDetails;\n","import \"./App.css\";\nimport React from \"react\";\nimport { createMuiTheme } from \"@material-ui/core/styles\";\nimport { ThemeProvider } from \"@material-ui/styles\";\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport HomeScreen from \"./Screens/HomeScreen\";\nimport PlantDetails from \"./Screens/PlantDetails\";\nimport { ProvidePlants } from \"./Context/PlantsContext\";\n\nconst muiTheme = createMuiTheme();\n\nexport const App = () => {\n  return (\n    <ProvidePlants>\n      <ThemeProvider theme={muiTheme}>\n        <BrowserRouter>\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"stretch\",\n              backgroundColor: \"#e6e6e6\",\n            }}\n          >\n            <Switch>\n              <Route exact path=\"/\">\n                <HomeScreen />\n              </Route>\n              <Route path=\"/plant/:id\">\n                <PlantDetails />\n              </Route>\n            </Switch>\n          </div>\n        </BrowserRouter>\n      </ThemeProvider>\n    </ProvidePlants>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}